name: Test API

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Setup test environment variables
        working-directory: ./server
        run: |
          echo "DATABASE_URL=file:./dev.db" > .env.test
          echo "TEST_DATABASE_URL=file:./dev.db" >> .env.test
          echo "NODE_ENV=test" >> .env.test

      - name: Generate Prisma client
        working-directory: ./server
        run: npx prisma generate

      - name: Run database migrations
        working-directory: ./server
        env:
          DATABASE_URL: file:./dev.db
          NODE_ENV: test
        run: npx prisma migrate deploy

      - name: Run tests
        working-directory: ./server
        env:
          DATABASE_URL: file:./dev.db
          TEST_DATABASE_URL: file:./dev.db
          NODE_ENV: test
        run: npm run test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./server/coverage/lcov.info
          directory: ./server/coverage/
          flags: api-tests
          name: api-coverage
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Check TypeScript compilation
        working-directory: ./server
        run: npx tsc --noEmit

      - name: Install client dependencies (if exists)
        working-directory: ./client
        run: |
          if [ -f package.json ]; then
            npm ci
            npx tsc --noEmit
          fi

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Generate Prisma client
        working-directory: ./server
        run: npx prisma generate

      - name: Build server
        working-directory: ./server
        run: npm run build

      - name: Install client dependencies and build (if exists)
        working-directory: ./client
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build
          fi
