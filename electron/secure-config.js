const { app } = require('electron');

class SecureConfigManager {
  constructor() {
    // Set the USER_DATA_PATH for the server's SecretManager
    process.env.USER_DATA_PATH = app.getPath('userData');
  }

  // Get all environment variables for the server
  getServerEnvironment() {
    return {
      // Database
      DATABASE_URL: process.env.DATABASE_URL || "postgresql://postgres:postgres@localhost:5432/scheduling",
      DB_TYPE: process.env.DB_TYPE || 'embedded',
      DB_HOST: process.env.DB_HOST || 'localhost',
      DB_PORT: process.env.DB_PORT || '5432',
      DB_NAME: process.env.DB_NAME || 'scheduling',
      DB_USER: process.env.DB_USER || 'postgres',
      DB_PASSWORD: process.env.DB_PASSWORD || 'postgres',
      
      // Server
      PORT: process.env.PORT || '3001',
      NODE_ENV: process.env.NODE_ENV || 'production',
      FRONTEND_URL: process.env.FRONTEND_URL || 'http://localhost:3000',
      
      // Security (JWT_SECRET is now auto-generated by SecretManager)
      GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,
      
      // Electron specific
      ELECTRON: 'true',
      USER_DATA_PATH: app.getPath('userData')
    };
  }

  // Clean up secrets (for uninstall) - delegates to server's SecretManager
  cleanup() {
    // The server's SecretManager will handle cleanup when USER_DATA_PATH is set
    console.log('Cleanup will be handled by server SecretManager');
  }
}

module.exports = { SecureConfigManager };
